// b(form) --> $namespace+'-'+form
// e(group) --> $namespace+'-'+form+'__'+group
// m(flex) --> $namespace+'-'+form+'__'+group+'--'+flex

// b(form) --> $namespace+'-'+form
// m(flex) --> $namespace+'-'+form+'--'+flex

@mixin b($block) {
  $B: $namespace + '-' + $block !global;

  .#{$B} {
    @content;
  }
}

@mixin e($element) {
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin with-e($element) {
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @at-root {
    &#{$currentSelector} {
      @content;
    }
  }
}

@mixin m($modifier) {
  $parentSelector: & !global;
  $currentSelector: '';

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ','};
  }

  @at-root {
    #{$currentSelector} {
      @content;
    }
  }
}

@mixin with-m($modifier) {
  $parentSelector: & !global;
  $currentSelector: '';

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + & + $modifier-separator + $unit + ','};
  }

  @at-root {
    &#{$currentSelector} {
      @content;
    }
  }
}

@mixin mm($modifier) {
  $currentSelector: '';

  @each $unit in $modifier {
    $currentSelector: #{$currentSelector + $parentSelector + $modifier-separator + $unit + ','};
  }

  @at-root {
    &#{$currentSelector} {
      @content;
    }
  }
}

@mixin child-e($element) {
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @at-root {
    & > #{$currentSelector} {
      @content;
    }
  }
}

@mixin descendant-e($element) {
  $currentSelector: '';

  @each $unit in $element {
    $currentSelector: #{$currentSelector + '.' + $B + $element-separator + $unit + ','};
  }

  @at-root {
    & #{$currentSelector} {
      @content;
    }
  }
}

@mixin when($state) {
  @at-root {
    &.#{$state-prefix + $state} {
      @content;
    }
  }
}
